BodyOp Delight-Particle
|*
   <h3>Overview</h3>

   <h3>Motion Blur</h3>
   The particles may be motion blurred by enabling the "Motion Blur" toggle,
   and specifying two or more motion samples in the "Motion Samples" parameter.
   The particle body must have a <code>Particle.velocity</code> channel in
   order for the motion blur to work.

   <h3>Constant Particle Radius</h3>
   If you want all the particles to share the same radius in the ouput
   RIB file, simply leave the "Per-Particle Radius" toggle unchecked, and
   specify the constant (shared) radius using the "Constant Radius" parameter.

   <h3>Per-Particle Radius</h3>
   Per-particle radii are possible assuming there is a scalar particle channel
   containing the per-particle radii.  To enable this feature, the 
   "Per-Particle Radius" toggle needs to be checked, and the 
   "Per-Particle Radius Channel" parameter needs to contain the name of the
   channel containing the radii.  By default this channel is called "radius"
   but you'll need to change it if you are storing your per-particle radii
   in some other channel.
*|
{    
    Category "3Delight"
    Category "Particle"

    EnumGroup VelocitySource
    {
        "Particle.velocity"
        "Field.velocity"
    }

    EnumGroup ParticlePrimitive
    {
        "Points"
        "Spheres"
        "Blobby"
        "Disk"
        "Patch"
    }

    ParamSection "Motion Blur"
    {
        Toggle "Motion Blur" "Off"
        |* Produces a RIB archive with MotionBlocks corresponding to the
           motion samples specified in the "Motion Samples" parameter below. 
           Note that a <code>Particle.velocity</code> channel must be present
           in the particle body for motion blur to work. *|

        VelocitySource "Velocity Source" "Particle.velocity"
        |* The source channel of the velocities used for motion blur.  
           By default the <code>Particle.velocity</code> channel is used.  
           However, for highly accurate motion blur (involving, for example,
           high degrees of rotational motion) you should instead use the 
           <code>Field.velocity</code> setting, if that channel is available in
	   the particle body. *|

        String "Motion Samples" "-0.25 0.25"
        |* A whitespace separated list of motion sample times, normalized around
           the current frame, such that 0 = frame begin and 1 = frame end. 
           Any number of motion samples are acceptable.  For example, specifying
           three motion samples <code>0.1 0.5 0.9</code> is perfectly OK. *|
    }

    ParamSection "Radius"
    {
        Toggle "Per-Particle Radius" "Off"
        || Enables varying particle radii in the RIB.

        ChannelName "Per-Particle Radius Channel" "Particle.radius"
        || Specifies the name of the particle channel containing the radii.

        Float "Constant Radius" "0.25 voxels"
        |* Specifies the worldspace radius of all particles, if 
          "Per-Particle Radius" is off. *|
    }

//    ParamSection "Render"
//    {
//	ParticlePrimitive "Particle Primitive" "Points"
//	|| The primitive type used to render the particles.
//    }

    ParamSection "Constant Primvar Output"
    {   
	String "Constant Primvar Names" ""
        |* A space-separated list of primitive variables to output as 
	   <b>constant</b> primvars.
        *|

	String "Constant Primvar Types" ""
        |* For each primvar name listed in the parameter above, 
	   this parameter needs to list the corresponding primvar type.
	   For example, if "Constant Primvar Names" contains 
	   <code>Cs Bleh</code>, and this parameter contains 
	   <code>color float</code>, then:
	   <ul>
	     <li>Primvar <code>Cs</code> would be of type 
	       <code>constant color</code></li>
	     <li>Primar <code>Bleh</code> would be of type
	       <code>constant float</code></li>
	   </ul>
        *|	   

	String "Constant Values" ""
        |* For each primvar name listed in the "Constant Primvar Names" 
	   parameter, this parameter needs to list the constant primvars' 
	   values.  NEL expressions are allowed as long as they
	   do <i>not</i> contain any spaces!  All vector-valued primvars (e.g.
	   colors, points, vectors etc.) need to be given using the NEL vector
	   construct <code>vec(X,Y,Z)</code>.  For example, if 
	   "Constant Primvar Names" contains 
	   <code>Cs Bleh</code>, and this parameter contains 
	   <code>vec(1,0,0) frame*frame</code>, then:
	   <ul>
	     <li>Primvar <code>Cs</code> would have a constant value of
	       <code>1 0 0</code> (e.g. the red color)</li>
	     <li>Primar <code>Bleh</code> would have a constant value of
	       <code>frame*frame</code> (e.g. the square of the current 
	       frame)</li>
	   </ul>
        *|
    }

    ParamSection "Vertex Primvar Output"
    {
	String "Vertex Primvar Names" ""
        |* A space-separated list of primitive variables to output as 
	   <b>vertex</b> primvars. *|

	String "Vertex Primvar Types" ""
        |* For each uniform primvar name listed in the parameter above, 
	   this parameter needs to list the corresponding type.
	   For example, if "Vertex Primvar Names" contains 
	   <code>Cs Bleh</code>, and this parameter contains 
	   <code>color float</code>, then:
	   <ul>
	     <li>Primvar <code>Cs</code> would be of type 
	       <code>vertex color</code></li>
	     <li>Primar <code>Bleh</code> would be of type
	       <code>vertex float</code></li>
	   </ul>
        *|

	ChannelNameList "Particle Channel Names" ""
        |* For each primvar name listed in the "Vertex Primvar Names" 
	   parameter, this parameter needs to list the name of the 
	   corresponding particle channel containing the primvar's data.
	   NOTE that wildcards are NOT allowed. Since vertex primvars 
	   contain per-particle data, only Naiad particle channels are allowed
	   here.*|  
    }

    Group(Particle) Input b ""
    |* All bodies matching the particle signature are admitted and output 
       to disk. *|

    Group(Body) Output 0 ""
    || All bodies encountered in input b are passed out through this output.

    Passthrough "b" "0"
}

Code "NBuddy-3delight"
